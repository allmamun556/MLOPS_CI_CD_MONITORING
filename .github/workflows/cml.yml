# .github/workflows/cml.yaml
name: CML Report and Experiment tracking
permissions:
  id-token: write
  contents: write
on: [push]

jobs:
  run:
    runs-on: ubuntu-latest
    #container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - uses: iterative/setup-cml@v1
      #- uses: iterative/setup-dvc@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[s3]  # Install DVC with the required remote (e.g., s3 or dagshub)
      # Set up DVC (for DagsHub storage)
      - name: Set up DVC
        run: |
          # Configure DVC remote to use DagsHub as storage
          dvc remote add origin s3://dvc
          dvc remote modify origin endpointurl https://dagshub.com/allmamun556/MLOPS_CI_CD_MONITORING.s3
          dvc remote modify origin --local access_key_id e93226059eb069c73f4c2738187b0a881fb403fa
          dvc remote modify origin --local secret_access_key e93226059eb069c73f4c2738187b0a881fb403fa

      # Pull data from DVC remote (DagsHub)
      - name: Pull data from DVC remote
        run: |
          dvc pull -r origin  # Pull data from the configured remote (DagsHub)    
        
      - name: Check Data Columns
        run: |
          python -c "import pandas as pd; data = pd.read_csv('data/Turbine_Data.csv'); print(data.columns)"    
          
      - name: 'Create CML report'
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        
          #PYTHONUNBUFFERED: 1 

      - name: Configure MLflow environment
        env:
          MLFLOW_TRACKING_URI: "https://dagshub.com/allmamun556/MLOPS_CI_CD_MONITORING.mlflow"
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          python -c "
          import os, mlflow;
          mlflow.set_tracking_uri(os.getenv('MLFLOW_TRACKING_URI'));
          os.environ['MLFLOW_TRACKING_USERNAME'] = os.getenv('MLFLOW_TRACKING_USERNAME');
          os.environ['MLFLOW_TRACKING_PASSWORD'] = os.getenv('MLFLOW_TRACKING_PASSWORD');
          print('MLflow tracking URI and credentials are set.')
          "    
          
        run: |
          jupyter nbconvert --to notebook --execute --inplace --ExecutePreprocessor.timeout=600 ml_training_notebook.ipynb

          echo "## Model Metrics" > report.md
          cat metrics.txt >> report.md

          cml-send-comment report.md
          
          # echo "## Model Metrics" > report.md
          # cat metrics.txt >> report.md

          # cml-send-comment report.md


