name: Deploy to the Hugging Faces Hubb
permissions:
  id-token: write
  contents: write

on:
  push:
    branches: [main]

  # to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  sync-to-hub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          lfs: true

      # Remove large files to prevent push errors
      - name: Install dependenciess
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install dvc[s3] 

       # Set up DVC (for DagsHub storage)
      - name: Set up DVC
        run: |
          # Configure DVC remote to use DagsHub as storage
          dvc remote add origin s3://dvc
          dvc remote modify origin endpointurl https://dagshub.com/allmamun556/MLOPS_CI_CD_MONITORING.s3
          dvc remote modify origin --local access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}

      # Pull data from DVC remote (DagsHub)
      - name: Pull data from DVC remote
        run: |
          dvc pull -r origin  # Pull data from the configured remote (DagsHub)         

      - name: Run unit tests
        run: |
          python -m unittest discover tests  # Runs all tests in the "test" directory
        continue-on-error: true  # Allow the workflow to continue if tests fail

      # Decide on model retraining based on test results
      - name: Decide model retraining
        run: |
          if [ "${{ steps.run_tests.outcome }}" == "failure" ]; then
            echo "Unit tests failed. Retraining the model..."
            python retrain_model.py  # Replace with your retraining script
          else
            echo "All unit tests passed. Model retraining is not necessary."  

      # # Step 7: Exclude `notebooks` folder and other large files
      # - name: Exclude unnecessary files
      #   run: |
      #     echo "notebooks/" >> .gitignore  # Add notebooks folder to .gitignore
      #     git rm -r --cached notebooks || true  # Remove from Git cache if already tracked
      #     git add .gitignore
      #     git commit -m "Exclude notebooks folder from tracking" || true

      # # Step 8: Convert shallow clone to full clone (if necessary)
      # - name: Convert shallow clone to full clone
      #   run: git fetch --unshallow || true

      # # Step 8: Ensure full Git history (convert shallow clone)
      # # - name: Ensure full Git history
      # #   run: git fetch --unshallow || true  

      # - name: Git Config
      #   run: |
      #     git config user.name allmamun556
      #     git config user.email allmamun556@gmail.com  

      # - name: Install dependenciess
      #   env:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #   run: |S
      #     git lfs install
      #     pip install huggingface_hub
      #     huggingface-cli lfs-enable-largefiles .
      #     git lfs track "*.ipynb"
      #     git commit -m "Track large files with Git LFS"
      #     git push origin main
    

      # - name: Push to Hugging Face Hub

      #   env:
      #     HF_TOKEN: ${{ secrets.HF_TOKEN }}
      #   run: |
      #     git remote set-url origin https://mamunds:${{ secrets.HF_TOKEN }}@huggingface.co/spaces/mamunds/mlops
      #     git push --force origin main